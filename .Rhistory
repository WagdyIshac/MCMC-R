insall.packages("hitandrun")
install.packages("hitandrun")
simplexConstraints(8)
library("hitandrun")
simplexConstraints(8)
Constr <- simplexConstraints(8)
Constr
x0 <- c(0.25, 0.25)
x0
samples <- har(x0, Constr, 1E4)$samples
x0 <- c(1,1,1,1,1,1,1,1)
samples <- har(x0, Constr, 1E4)$samples
x0 <- c(1,0,0,0,0,0,0,0)
samples <- har(x0, Constr, 1E4)$samples
x0 <- c(0,0,0,0,0,0,0,0)
samples <- har(x0, Constr, 1E4)$samples
x0 <- c(0,0,0,0,0,0,0,0,0)
samples <- har(x0, Constr, 1E4)$samples
A <- rbind(c(-1, 0), c(0, -1), c(1, 1))
b <- c(0, 0, 1)
d <- c("<=", "<=", "<=")
constr <- list(constr=A, rhs=b, dir=d)
constr
x0 <- c(0.25, 0.25)
samples <- har(x0, constr, 1E4)$samples
samples
ctr 
ctr <- simplexConstraints(8)
ctr
results <- hitandrun(constr, n.samples=1000)
results
results <- hitandrun(ctr, n.samples=1000)
results
ctr
results <- hitandrun(ctr, n.samples=10000)
results#samples
ctr20 <- simplexConstraints(20)
results <- hitandrun(ctr20, n.samples=10000)
results#samples
install.packages("devtools")
devtools::install_github("Azure/rAzureBatch") 
devtools::install_github("Azure/doAzureParallel") 
library(doAzureParallel) 
generateCredentialsConfig("credentials.json") 
getwd
getwd()
setwd("c:/Code/mcmc/")
getwd()
generateCredentialsConfig("credentials.json") 
setCredentials("credentials.json") 
generateClusterConfig("cluster.json")
cluster <- makeCluster("cluster.json") 
registerDoAzureParallel(cluster)
getDoParWorkers() 
contr20
s20 <- SimplexConstraints(20)
s20 <- simplexConstraints(20)
s20
start_s <- Sys.time()
results20 <- foreach(i 1:10 ) %do% {hitandrun(s20,1E4)}
results20 <- foreach(i =1:10 ) %do% {hitandrun(s20,1E4)}
results20#samples
s20 <- simplexConstraints(2)
results20 <- foreach(i 1:10 ) %do% {hitandrun(s20,1E4)}
results20 <- foreach(i =1:10 ) %do% {hitandrun(s20,1E4)}
results20
results20 <- foreach(i =1:10 ) %do% {hitandrun(s20,1E2)}
results20
getDoParWorkers() 
cluster <- makeCluster("cluster.json") 
stopCluster(cluster)
cluster <- makeCluster("cluster.json") 
cluster.showNodesFailure()
cluster
getDoParWorkers() 
registerDoAzureParallel(cluster)
getDoParWorkers() 
s20
results20 <- foreach(i =1:10 ) %dopar% {hitandrun(s20,1E2)}
generateClusterConfig("cluster.json")
getwd()
generateClusterConfig("cluster2.json")
cluster2 <- makeCluster("cluster2.json") 
results20 <- foreach(i =1:10 ) %dopar% {hitandrun(s20,1E2)}
registerDoAzureParallel(cluster2)
results20 <- foreach(i =1:10 ) %dopar% {hitandrun(s20,1E2)}
getClusterFile(cluster, "tvm-1003550993_1-20180822t195806z-p", "stderr.txt", downloadPath = "pool-errors.txt")
getClusterFile(cluster2, "tvm-1003550993_1-20180822t195806z-p", "stderr.txt", downloadPath = "pool-errors.txt")
stopCluster(cluster2)
q()
